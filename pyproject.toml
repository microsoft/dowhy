[tool.poetry]
name = "dowhy"
# 0.0.0 is standard placeholder for poetry-dynamic-versioning
version = "0.0.0"
description = "DoWhy is a Python library for causal inference that supports explicit modeling and testing of causal assumptions"
authors = [
    "PyWhy Community"
]
maintainers = []
license = "MIT"
documentation = "https://py-why.github.io/dowhy"
repository = "https://github.com/pywhy/dowhy"
classifiers = [  
    'Development Status :: 4 - Beta',
    'License :: OSI Approved :: MIT License',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
]
keywords = [
    'causality',
    'machine-learning',
    'causal-inference',
    'statistics',
    'graphical-model'
]
include = ['docs', 'tests', 'CONTRIBUTING.md']
readme = 'README.rst'

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"

[tool.poetry-dynamic-versioning.substitution]
files = ["dowhy/__init__.py"]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
scipy = "^1.8.1"
statsmodels = "^0.13.2"
numpy = "^1.23.1"
pandas = "^1.4.3"
networkx = "^2.8.5"
sympy = "^1.10.1"
scikit-learn = "1.0.2"
pydot = "^1.4.2"
joblib = "^1.1.0"
pandas-stubs = {version = "^1.4.3", optional = true}
llvmlite = "^0.31.0"
matplotlib = {version = "^3.5.2", optional = true}
# TODO: resolve circular dependency w/ econml
econml = {version = "*", optional = true}
tqdm = "^4.64.0"

[tool.poetry.extras]
plotting = ["matplotlib"]

[tool.poetry.dev-dependencies]
poethepoet = "^0.16.0"
flake8 = "^4.0.1"
black = "^22.6.0"
isort = "^5.10.1"
pytest = "^7.1.2"
twine = "^4.0.1"
nbformat = "^5.4.0"
jupyter = "^1.0.0"
flaky = "^3.7.0"
pygraphviz = "^1.9"
causalml = "^0.12.3"
pytest-xdist = {version = "^2.5.0", extras = ["psutil"]}
tensorflow = "^2.9.1"
keras = "^2.9.0"
rpy2 = {version = "^3.5.2", optional = true}
xgboost = "^1.6.1"
tqdm = "^4.64.0"
mypy = "^0.971"
econml = "*"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "advanced: not be to run each time. only on package updates."
]

[tool.poe.tasks]
# stop the build if there are Python syntax errors or undefined names
_flake8Errors = "flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics"
_flake8Warnings = "flake8 . --count --exit-zero --statistics"
_black = 'black .'
_isort = 'isort .'

# testing tasks
test = "pytest -v -m 'not advanced' -n auto --durations=0 --durations-min=15.0"
test_focused = "pytest -v -m 'focused'"

jupyter = "jupyter nbconvert --to html docs/source/example_notebooks/dowhy_simple_example.ipynb"
verifyPackage = "twine check dist/*"
# TODO: replace with `poetry publish`
uploadPackage = "twine upload dist/*"

# TODO: add formatting to build process
[tool.poe.tasks.format]
sequence = ['_black', '_isort']
ignore_fail = 'return_non_zero'

[tool.poe.tasks.lint]
sequence = ['_flake8Errors', '_flake8Warnings']
ignore_fail = 'return_non_zero'

[tool.poe.tasks.verify]
sequence = ['lint', 'test']
ignore_fail = "return_non_zero"